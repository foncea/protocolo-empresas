theme_bw() +
#scale_y_continuous(labels = scales::percent) +
scale_fill_brewer(palette='Set3') +
geom_text(aes(label=percent(Total_Inf / pob[1], digits=1)), position=position_dodge(width=0.9), vjust=-0.25)
p
p = tot_infecciones %>%
filter(R0 == 2) %>%
mutate(Protocolo = factor(Protocolo, levels=nombre[c(3,2,1)])) %>%
ggplot(aes(x=factor(R0), y=Total_Inf / pob[1], fill=Protocolo)) +
geom_bar(stat='identity', position='dodge', color='black') +
ggtitle('Porcentaje de Infectados Totales en 5 Meses (R_0 = 2)') +
ylab('') +
xlab('') +
theme_bw() +
#scale_y_continuous(labels = scales::percent) +
scale_fill_brewer(palette='Set3') +
geom_text(aes(label=percent(Total_Inf / pob[1], digits=1)), position=position_dodge(width=0.9), vjust=-0.25)
p
p = tot_infecciones %>%
filter(R0 == 2) %>%
mutate(Protocolo = factor(Protocolo, levels=nombre[c(3,2,1)])) %>%
ggplot(aes( y=Total_Inf / pob[1], fill=Protocolo)) +
geom_bar(stat='identity', position='dodge', color='black') +
ggtitle('Porcentaje de Infectados Totales en 5 Meses (R_0 = 2)') +
ylab('') +
xlab('') +
theme_bw() +
#scale_y_continuous(labels = scales::percent) +
scale_fill_brewer(palette='Set3') +
geom_text(aes(label=percent(Total_Inf / pob[1], digits=1)), position=position_dodge(width=0.9), vjust=-0.25)
p
p = tot_infecciones %>%
filter(R0 == 2) %>%
mutate(Protocolo = factor(Protocolo, levels=nombre[c(3,2,1)])) %>%
ggplot(aes(x=Protocolo, y=Total_Inf / pob[1], fill=Protocolo)) +
geom_bar(stat='identity', position='dodge', color='black') +
ggtitle('Porcentaje de Infectados Totales en 5 Meses (R_0 = 2)') +
ylab('') +
xlab('') +
theme_bw() +
#scale_y_continuous(labels = scales::percent) +
scale_fill_brewer(palette='Set3') +
geom_text(aes(label=percent(Total_Inf / pob[1], digits=1)), position=position_dodge(width=0.9), vjust=-0.25)
p
ggsave(paste('plots/mega_27-04/Porcentaje infecciosos totales (R0 = 2).pdf', sep=''), p)
p = fraccion_tiempo %>%
filter(R0 == 2) %>%
mutate(Protocolo = factor(Protocolo, levels=nombre[c(3,2,1)])) %>%
ggplot(aes(x=factor(R0), y=percent(fraccion_tiempo, digits=1), fill=Protocolo)) +
geom_bar(stat='identity', position='dodge', color='black') +
ggtitle('Fraccion del Tiempo sin Trabajadores Infecciosos ') +
ylab('') +
scale_y_continuous(labels = scales::percent) +
xlab(TeX('$R_0')) +
#coord_cartesian(ylim=c(0.7,1)) +
scale_fill_brewer(palette='Set3') +
#scale_fill_viridis(option='viridis', discrete=TRUE) +
geom_text(aes(label=percent(fraccion_tiempo, digits=1)), position=position_dodge(width=0.9), vjust=-0.25) +
theme_bw()
p
p = fraccion_tiempo %>%
filter(R0 == 2) %>%
mutate(Protocolo = factor(Protocolo, levels=nombre[c(3,2,1)])) %>%
ggplot(aes(x=factor(R0), y=percent(fraccion_tiempo, digits=1), fill=Protocolo)) +
geom_bar(stat='identity', position='dodge', color='black') +
ggtitle('Fraccion del Tiempo sin Trabajadores Infecciosos ') +
ylab('') +
scale_y_continuous(labels = scales::percent) +
xlab(TeX('$R_0')) +
coord_cartesian(ylim=c(0,1)) +
scale_fill_brewer(palette='Set3') +
#scale_fill_viridis(option='viridis', discrete=TRUE) +
geom_text(aes(label=percent(fraccion_tiempo, digits=1)), position=position_dodge(width=0.9), vjust=-0.25) +
theme_bw()
p
p = fraccion_tiempo %>%
filter(R0 == 2) %>%
mutate(Protocolo = factor(Protocolo, levels=nombre[c(3,2,1)])) %>%
ggplot(aes(x=Protocolo, y=percent(fraccion_tiempo, digits=1), fill=Protocolo)) +
geom_bar(stat='identity', position='dodge', color='black') +
ggtitle('Fraccion del Tiempo sin Trabajadores Infecciosos (R_0 = 2)') +
ylab('') +
scale_y_continuous(labels = scales::percent) +
xlab('') +
coord_cartesian(ylim=c(0,1)) +
scale_fill_brewer(palette='Set3') +
#scale_fill_viridis(option='viridis', discrete=TRUE) +
geom_text(aes(label=percent(fraccion_tiempo, digits=1)), position=position_dodge(width=0.9), vjust=-0.25) +
theme_bw()
p
ggsave(paste('plots/mega_27-04/Fraccion tiempo sin trabajadores infectados (R0 = 2).pdf', sep=''), p)
p = tot_infecciones %>%
filter(R0 == 2) %>%
mutate(Protocolo = factor(Protocolo, levels=nombre[c(3,2,1)])) %>%
ggplot(aes(x=Protocolo, y=Total_Inf / pob[1], fill=Protocolo)) +
geom_bar(stat='identity', position='dodge', color='black') +
ggtitle('Porcentaje de Enfermos Totales en 5 Meses (R_0 = 2)') +
ylab('') +
xlab('') +
theme_bw() +
#scale_y_continuous(labels = scales::percent) +
scale_fill_brewer(palette='Set3') +
geom_text(aes(label=percent(Total_Inf / pob[1], digits=1)), position=position_dodge(width=0.9), vjust=-0.25)
p
ggsave(paste('plots/mega_27-04/Porcentaje infecciosos totales (R0 = 2).pdf', sep=''), p)
p = fraccion_tiempo %>%
filter(R0 == 2) %>%
mutate(Protocolo = factor(Protocolo, levels=nombre[c(3,2,1)])) %>%
ggplot(aes(x=Protocolo, y=percent(fraccion_tiempo, digits=1), fill=Protocolo)) +
geom_bar(stat='identity', position='dodge', color='black') +
ggtitle('Fraccion del Tiempo sin Trabajadores Enfermos (R_0 = 2)') +
ylab('') +
scale_y_continuous(labels = scales::percent) +
xlab('') +
coord_cartesian(ylim=c(0,1)) +
scale_fill_brewer(palette='Set3') +
#scale_fill_viridis(option='viridis', discrete=TRUE) +
geom_text(aes(label=percent(fraccion_tiempo, digits=1)), position=position_dodge(width=0.9), vjust=-0.25) +
theme_bw()
p
ggsave(paste('plots/mega_27-04/Fraccion tiempo sin trabajadores infectados (R0 = 2).pdf', sep=''), p)
tabla
tabla = trabajando_inf %>%
mutate(Protocolo = factor(Protocolo, levels=nombre[rev(c(3,2, 1))])) %>%
group_by(Protocolo, R0) %>%
summarize(Trabajando = percent(mean(trabajando) / 100), Infectados = percent(mean(Inf_Trab)))
tabla = tabla[order(tabla$R0), ]
tabla
formattable(tabla)
formattable(tabla %>% rename(Enfermos = Infectados) %>% filter(R0 = 2) %>% select(Protocolo, Enfermos, Trabajando))
formattable(tabla %>% rename(Enfermos = Infectados) %>% filter(R0 == 2) %>% select(Protocolo, Enfermos, Trabajando))
setwd("C:/Users/Patricio Foncea/Dropbox (MIT)/CORONAVIRUS/Protocolo de Empresas/simulaciones_protocolo/protocolo-empresas")
alg =           c('HacerNada', 'Bios', 'HacerNadaTurnos',
'HacerNada', 'Bios', 'HacerNadaTurnos')
alg =           c('HacerNada', 'Bios', 'HacerNadaTurnos',
'HacerNada', 'Bios', 'HacerNadaTurnos')
#'HacerNadaPCR', 'BiosPCR', 'HacerNadaTurnosPCR')
frec_test =     rep(c(0, 3, 0), 20)
ctna_dur =      rep(14, 60)
ctna_inic =     rep(0, 12)
pob =           rep(101, 60)
r0 =            c(2,1,1,2,2,2)#rep(1, 60)
tiempo =        rep(156, 60)
iteraciones =   rep(10, 60)
fecha =         rep('27-04', 60)
p_inic =        c(0.0075, 0.0075,  0.0075, 0.0075, 0.0075,  0.0075, 0, 0, 0, 0, 0, 0)
nombre =        rep(c('Situacion Actual', 'Anticuerpos cada 3 Días', 'Turnos de 2 Semanas'), 20)
pcr =           c('1. Sin-PCR', '1. Sin-PCR', '1. Sin-PCR',
'2. PCR Inicial', '2. PCR Inicial', '2. PCR Inicial',
'3. PCR Inicial y Contagio', '3. PCR Inicial y Contagio', '3. PCR Inicial y Contagio')
################################################################################
library(ggplot2)
library(tidyr)
library(dplyr)
library(rlang)
library(formattable)
library(gridExtra)
library(viridis)
library(latex2exp)
n=1
sim = paste('_' , alg[n] , '_frec=' , frec_test[n] , '_pob=' , pob[n] , '_cinic=', ctna_inic[n], '_r0=' , r0[n] , '_pi=', p_inic[n], '_iter=' , iteraciones[n], '_' , fecha[n] , sep='')
resultados = read.csv(paste('datos_simulaciones/resultados', sim, '.csv', sep=''))
resultados$X = NULL
resultados %>%
group_by(tiempo, estado) %>%
summarize(poblacion = sum(X0)) %>%
ggplot(aes(x=tiempo, y=poblacion, color=estado)) +
geom_line()
alg =           c('HacerNada', 'Bios', 'HacerNadaTurnos',
'HacerNada', 'Bios', 'HacerNadaTurnos')
#'HacerNadaPCR', 'BiosPCR', 'HacerNadaTurnosPCR')
frec_test =     rep(c(0, 3, 0), 20)
ctna_dur =      rep(14, 60)
ctna_inic =     rep(0, 12)
pob =           rep(200, 60)
r0 =            c(2,1,1,2,2,2)#rep(1, 60)
tiempo =        rep(156, 60)
iteraciones =   rep(20, 60)
fecha =         rep('27-04', 60)
p_inic =        c(0.0075, 0.0075,  0.0075, 0.0075, 0.0075,  0.0075, 0, 0, 0, 0, 0, 0)
nombre =        rep(c('Situacion Actual', 'Anticuerpos cada 3 Días', 'Turnos de 2 Semanas'), 20)
pcr =           c('1. Sin-PCR', '1. Sin-PCR', '1. Sin-PCR',
'2. PCR Inicial', '2. PCR Inicial', '2. PCR Inicial',
'3. PCR Inicial y Contagio', '3. PCR Inicial y Contagio', '3. PCR Inicial y Contagio')
################################################################################
{
n=1
sim = paste('_' , alg[n] , '_frec=' , frec_test[n] , '_pob=' , pob[n] , '_cinic=', ctna_inic[n], '_r0=' , r0[n] , '_pi=', p_inic[n], '_iter=' , iteraciones[n], '_' , fecha[n] , sep='')
resultados = read.csv(paste('datos_simulaciones/resultados', sim, '.csv', sep=''))
resultados$X = NULL
resultados %>%
group_by(tiempo, estado) %>%
summarize(poblacion = sum(X0)) %>%
ggplot(aes(x=tiempo, y=poblacion, color=estado)) +
geom_line()
}
alg =           c('HacerNada', 'Bios', 'HacerNadaTurnos',
'HacerNada', 'Bios', 'HacerNadaTurnos')
#'HacerNadaPCR', 'BiosPCR', 'HacerNadaTurnosPCR')
frec_test =     rep(c(0, 3, 0), 20)
ctna_dur =      rep(14, 60)
ctna_inic =     rep(0, 12)
pob =           rep(200, 60)
r0 =            c(3,1,1,2,2,2)#rep(1, 60)
tiempo =        rep(156, 60)
iteraciones =   rep(20, 60)
fecha =         rep('27-04', 60)
p_inic =        c(0.0075, 0.0075,  0.0075, 0.0075, 0.0075,  0.0075, 0, 0, 0, 0, 0, 0)
nombre =        rep(c('Situacion Actual', 'Anticuerpos cada 3 Días', 'Turnos de 2 Semanas'), 20)
pcr =           c('1. Sin-PCR', '1. Sin-PCR', '1. Sin-PCR',
'2. PCR Inicial', '2. PCR Inicial', '2. PCR Inicial',
'3. PCR Inicial y Contagio', '3. PCR Inicial y Contagio', '3. PCR Inicial y Contagio')
################################################################################
################################################################################
{
n=1
sim = paste('_' , alg[n] , '_frec=' , frec_test[n] , '_pob=' , pob[n] , '_cinic=', ctna_inic[n], '_r0=' , r0[n] , '_pi=', p_inic[n], '_iter=' , iteraciones[n], '_' , fecha[n] , sep='')
resultados = read.csv(paste('datos_simulaciones/resultados', sim, '.csv', sep=''))
resultados$X = NULL
resultados %>%
group_by(tiempo, estado) %>%
summarize(poblacion = sum(X0)) %>%
ggplot(aes(x=tiempo, y=poblacion, color=estado)) +
geom_line()
}
################################################################################
{
n=1
sim = paste('_' , alg[n] , '_frec=' , frec_test[n] , '_pob=' , pob[n] , '_cinic=', ctna_inic[n], '_r0=' , r0[n] , '_pi=', p_inic[n], '_iter=' , iteraciones[n], '_' , fecha[n] , sep='')
resultados = read.csv(paste('datos_simulaciones/resultados', sim, '.csv', sep=''))
resultados$X = NULL
resultados %>%
group_by(tiempo, estado) %>%
summarize(poblacion = sum(X0)) %>%
ggplot(aes(x=tiempo, y=poblacion, color=estado)) +
geom_line()
}
p_inic =        c(0.075, 0.0075,  0.0075, 0.0075, 0.0075,  0.0075, 0, 0, 0, 0, 0, 0)
################################################################################
{
n=1
sim = paste('_' , alg[n] , '_frec=' , frec_test[n] , '_pob=' , pob[n] , '_cinic=', ctna_inic[n], '_r0=' , r0[n] , '_pi=', p_inic[n], '_iter=' , iteraciones[n], '_' , fecha[n] , sep='')
resultados = read.csv(paste('datos_simulaciones/resultados', sim, '.csv', sep=''))
resultados$X = NULL
resultados %>%
group_by(tiempo, estado) %>%
summarize(poblacion = sum(X0)) %>%
ggplot(aes(x=tiempo, y=poblacion, color=estado)) +
geom_line()
}
################################################################################
{
n=1
sim = paste('_' , alg[n] , '_frec=' , frec_test[n] , '_pob=' , pob[n] , '_cinic=', ctna_inic[n], '_r0=' , r0[n] , '_pi=', p_inic[n], '_iter=' , iteraciones[n], '_' , fecha[n] , sep='')
resultados = read.csv(paste('datos_simulaciones/resultados', sim, '.csv', sep=''))
resultados$X = NULL
resultados %>%
group_by(tiempo, estado) %>%
summarize(poblacion = sum(X0)) %>%
ggplot(aes(x=tiempo, y=poblacion, color=estado)) +
geom_line()
}
################################################################################
{
n=1
sim = paste('_' , alg[n] , '_frec=' , frec_test[n] , '_pob=' , pob[n] , '_cinic=', ctna_inic[n], '_r0=' , r0[n] , '_pi=', p_inic[n], '_iter=' , iteraciones[n], '_' , fecha[n] , sep='')
resultados = read.csv(paste('datos_simulaciones/resultados', sim, '.csv', sep=''))
resultados$X = NULL
resultados %>%
group_by(tiempo, estado) %>%
summarize(poblacion = sum(X0)) %>%
ggplot(aes(x=tiempo, y=poblacion, color=estado)) +
geom_line()
}
################################################################################
{
n=1
sim = paste('_' , alg[n] , '_frec=' , frec_test[n] , '_pob=' , pob[n] , '_cinic=', ctna_inic[n], '_r0=' , r0[n] , '_pi=', p_inic[n], '_iter=' , iteraciones[n], '_' , fecha[n] , sep='')
resultados = read.csv(paste('datos_simulaciones/resultados', sim, '.csv', sep=''))
resultados$X = NULL
resultados %>%
group_by(tiempo, estado) %>%
summarize(poblacion = sum(X0)) %>%
ggplot(aes(x=tiempo, y=poblacion, color=estado)) +
geom_line()
}
################################################################################
{
n=1
sim = paste('_' , alg[n] , '_frec=' , frec_test[n] , '_pob=' , pob[n] , '_cinic=', ctna_inic[n], '_r0=' , r0[n] , '_pi=', p_inic[n], '_iter=' , iteraciones[n], '_' , fecha[n] , sep='')
resultados = read.csv(paste('datos_simulaciones/resultados', sim, '.csv', sep=''))
resultados$X = NULL
resultados %>%
group_by(tiempo, estado) %>%
summarize(poblacion = sum(X0)) %>%
ggplot(aes(x=tiempo, y=poblacion, color=estado)) +
geom_line()
}
################################################################################
{
n=1
sim = paste('_' , alg[n] , '_frec=' , frec_test[n] , '_pob=' , pob[n] , '_cinic=', ctna_inic[n], '_r0=' , r0[n] , '_pi=', p_inic[n], '_iter=' , iteraciones[n], '_' , fecha[n] , sep='')
resultados = read.csv(paste('datos_simulaciones/resultados', sim, '.csv', sep=''))
resultados$X = NULL
resultados %>%
group_by(tiempo, estado) %>%
summarize(poblacion = sum(X0)) %>%
ggplot(aes(x=tiempo, y=poblacion, color=estado)) +
geom_line()
}
################################################################################
{
n=1
sim = paste('_' , alg[n] , '_frec=' , frec_test[n] , '_pob=' , pob[n] , '_cinic=', ctna_inic[n], '_r0=' , r0[n] , '_pi=', p_inic[n], '_iter=' , iteraciones[n], '_' , fecha[n] , sep='')
resultados = read.csv(paste('datos_simulaciones/resultados', sim, '.csv', sep=''))
resultados$X = NULL
resultados %>%
group_by(tiempo, estado) %>%
summarize(poblacion = sum(X0)) %>%
ggplot(aes(x=tiempo, y=poblacion, color=estado)) +
geom_line()
}
################################################################################
{
n=1
sim = paste('_' , alg[n] , '_frec=' , frec_test[n] , '_pob=' , pob[n] , '_cinic=', ctna_inic[n], '_r0=' , r0[n] , '_pi=', p_inic[n], '_iter=' , iteraciones[n], '_' , fecha[n] , sep='')
resultados = read.csv(paste('datos_simulaciones/resultados', sim, '.csv', sep=''))
resultados$X = NULL
resultados %>%
group_by(tiempo, estado) %>%
summarize(poblacion = sum(X0)) %>%
ggplot(aes(x=tiempo, y=poblacion, color=estado)) +
geom_line()
}
################################################################################
{
n=1
sim = paste('_' , alg[n] , '_frec=' , frec_test[n] , '_pob=' , pob[n] , '_cinic=', ctna_inic[n], '_r0=' , r0[n] , '_pi=', p_inic[n], '_iter=' , iteraciones[n], '_' , fecha[n] , sep='')
resultados = read.csv(paste('datos_simulaciones/resultados', sim, '.csv', sep=''))
resultados$X = NULL
resultados %>%
group_by(tiempo, estado) %>%
summarize(poblacion = sum(X0)) %>%
ggplot(aes(x=tiempo, y=poblacion, color=estado)) +
geom_line()
}
################################################################################
{
n=1
sim = paste('_' , alg[n] , '_frec=' , frec_test[n] , '_pob=' , pob[n] , '_cinic=', ctna_inic[n], '_r0=' , r0[n] , '_pi=', p_inic[n], '_iter=' , iteraciones[n], '_' , fecha[n] , sep='')
resultados = read.csv(paste('datos_simulaciones/resultados', sim, '.csv', sep=''))
resultados$X = NULL
resultados %>%
group_by(tiempo, estado) %>%
summarize(poblacion = sum(X0)) %>%
ggplot(aes(x=tiempo, y=poblacion, color=estado)) +
geom_line()
}
r0 =            c(7,1,1,2,2,2)#rep(1, 60)
################################################################################
{
n=1
sim = paste('_' , alg[n] , '_frec=' , frec_test[n] , '_pob=' , pob[n] , '_cinic=', ctna_inic[n], '_r0=' , r0[n] , '_pi=', p_inic[n], '_iter=' , iteraciones[n], '_' , fecha[n] , sep='')
resultados = read.csv(paste('datos_simulaciones/resultados', sim, '.csv', sep=''))
resultados$X = NULL
resultados %>%
group_by(tiempo, estado) %>%
summarize(poblacion = sum(X0)) %>%
ggplot(aes(x=tiempo, y=poblacion, color=estado)) +
geom_line()
}
# Parametros simulacion
alg =           c('HacerNada', 'Bios', 'HacerNadaTurnos',
'HacerNada', 'Bios', 'HacerNadaTurnos')
#'HacerNadaPCR', 'BiosPCR', 'HacerNadaTurnosPCR')
frec_test =     rep(c(0, 3, 0), 20)
ctna_dur =      rep(14, 60)
ctna_inic =     rep(0, 12)
pob =           rep(100, 60)
r0 =            c(3,3,3,2,2,2)#rep(1, 60)
tiempo =        rep(156, 60)
iteraciones =   rep(100, 60)
fecha =         rep('27-04', 60)
p_inic =        c(0.075, 0.0075,  0.0075, 0.0075, 0.0075,  0.0075, 0, 0, 0, 0, 0, 0)
nombre =        rep(c('Situacion Actual', 'Anticuerpos cada 3 Días', 'Turnos de 2 Semanas'), 20)
pcr =           c('1. Sin-PCR', '1. Sin-PCR', '1. Sin-PCR',
'2. PCR Inicial', '2. PCR Inicial', '2. PCR Inicial',
'3. PCR Inicial y Contagio', '3. PCR Inicial y Contagio', '3. PCR Inicial y Contagio')
################################################################################
{
n=1
sim = paste('_' , alg[n] , '_frec=' , frec_test[n] , '_pob=' , pob[n] , '_cinic=', ctna_inic[n], '_r0=' , r0[n] , '_pi=', p_inic[n], '_iter=' , iteraciones[n], '_' , fecha[n] , sep='')
resultados = read.csv(paste('datos_simulaciones/resultados', sim, '.csv', sep=''))
resultados$X = NULL
resultados %>%
group_by(tiempo, estado) %>%
summarize(poblacion = sum(X0)) %>%
ggplot(aes(x=tiempo, y=poblacion, color=estado)) +
geom_line()
n=2
sim = paste('_' , alg[n] , '_frec=' , frec_test[n] , '_pob=' , pob[n] , '_cinic=', ctna_inic[n], '_r0=' , r0[n] , '_pi=', p_inic[n], '_iter=' , iteraciones[n], '_' , fecha[n] , sep='')
resultados = read.csv(paste('datos_simulaciones/resultados', sim, '.csv', sep=''))
resultados$X = NULL
resultados %>%
group_by(tiempo, estado) %>%
summarize(poblacion = sum(X0)) %>%
ggplot(aes(x=tiempo, y=poblacion, color=estado)) +
geom_line()
n=3
sim = paste('_' , alg[n] , '_frec=' , frec_test[n] , '_pob=' , pob[n] , '_cinic=', ctna_inic[n], '_r0=' , r0[n] , '_pi=', p_inic[n], '_iter=' , iteraciones[n], '_' , fecha[n] , sep='')
resultados = read.csv(paste('datos_simulaciones/resultados', sim, '.csv', sep=''))
resultados$X = NULL
resultados %>%
group_by(tiempo, estado) %>%
summarize(poblacion = sum(X0)) %>%
ggplot(aes(x=tiempo, y=poblacion, color=estado)) +
geom_line()
}
################################################################################
{
n=1
sim = paste('_' , alg[n] , '_frec=' , frec_test[n] , '_pob=' , pob[n] , '_cinic=', ctna_inic[n], '_r0=' , r0[n] , '_pi=', p_inic[n], '_iter=' , iteraciones[n], '_' , fecha[n] , sep='')
resultados = read.csv(paste('datos_simulaciones/resultados', sim, '.csv', sep=''))
resultados$X = NULL
resultados %>%
group_by(tiempo, estado) %>%
summarize(poblacion = sum(X0)) %>%
ggplot(aes(x=tiempo, y=poblacion, color=estado)) +
geom_line()
n=2
sim = paste('_' , alg[n] , '_frec=' , frec_test[n] , '_pob=' , pob[n] , '_cinic=', ctna_inic[n], '_r0=' , r0[n] , '_pi=', p_inic[n], '_iter=' , iteraciones[n], '_' , fecha[n] , sep='')
resultados = read.csv(paste('datos_simulaciones/resultados', sim, '.csv', sep=''))
resultados$X = NULL
resultados %>%
group_by(tiempo, estado) %>%
summarize(poblacion = sum(X0)) %>%
ggplot(aes(x=tiempo, y=poblacion, color=estado)) +
geom_line()
n=3
sim = paste('_' , alg[n] , '_frec=' , frec_test[n] , '_pob=' , pob[n] , '_cinic=', ctna_inic[n], '_r0=' , r0[n] , '_pi=', p_inic[n], '_iter=' , iteraciones[n], '_' , fecha[n] , sep='')
resultados = read.csv(paste('datos_simulaciones/resultados', sim, '.csv', sep=''))
resultados$X = NULL
resultados %>%
group_by(tiempo, estado) %>%
summarize(poblacion = sum(X0)) %>%
ggplot(aes(x=tiempo, y=poblacion, color=estado)) +
geom_line()
}
p_inic =        c(0.075, 0.075,  0.075, 0.0075, 0.0075,  0.0075, 0, 0, 0, 0, 0, 0)
################################################################################
{
n=1
sim = paste('_' , alg[n] , '_frec=' , frec_test[n] , '_pob=' , pob[n] , '_cinic=', ctna_inic[n], '_r0=' , r0[n] , '_pi=', p_inic[n], '_iter=' , iteraciones[n], '_' , fecha[n] , sep='')
resultados = read.csv(paste('datos_simulaciones/resultados', sim, '.csv', sep=''))
resultados$X = NULL
resultados %>%
group_by(tiempo, estado) %>%
summarize(poblacion = sum(X0)) %>%
ggplot(aes(x=tiempo, y=poblacion, color=estado)) +
geom_line()
n=2
sim = paste('_' , alg[n] , '_frec=' , frec_test[n] , '_pob=' , pob[n] , '_cinic=', ctna_inic[n], '_r0=' , r0[n] , '_pi=', p_inic[n], '_iter=' , iteraciones[n], '_' , fecha[n] , sep='')
resultados = read.csv(paste('datos_simulaciones/resultados', sim, '.csv', sep=''))
resultados$X = NULL
resultados %>%
group_by(tiempo, estado) %>%
summarize(poblacion = sum(X0)) %>%
ggplot(aes(x=tiempo, y=poblacion, color=estado)) +
geom_line()
n=3
sim = paste('_' , alg[n] , '_frec=' , frec_test[n] , '_pob=' , pob[n] , '_cinic=', ctna_inic[n], '_r0=' , r0[n] , '_pi=', p_inic[n], '_iter=' , iteraciones[n], '_' , fecha[n] , sep='')
resultados = read.csv(paste('datos_simulaciones/resultados', sim, '.csv', sep=''))
resultados$X = NULL
resultados %>%
group_by(tiempo, estado) %>%
summarize(poblacion = sum(X0)) %>%
ggplot(aes(x=tiempo, y=poblacion, color=estado)) +
geom_line()
}
################################################################################
{
n=1
sim = paste('_' , alg[n] , '_frec=' , frec_test[n] , '_pob=' , pob[n] , '_cinic=', ctna_inic[n], '_r0=' , r0[n] , '_pi=', p_inic[n], '_iter=' , iteraciones[n], '_' , fecha[n] , sep='')
resultados = read.csv(paste('datos_simulaciones/resultados', sim, '.csv', sep=''))
resultados$X = NULL
p1=resultados %>%
group_by(tiempo, estado) %>%
summarize(poblacion = sum(X0)) %>%
ggplot(aes(x=tiempo, y=poblacion, color=estado)) +
geom_line()
n=2
sim = paste('_' , alg[n] , '_frec=' , frec_test[n] , '_pob=' , pob[n] , '_cinic=', ctna_inic[n], '_r0=' , r0[n] , '_pi=', p_inic[n], '_iter=' , iteraciones[n], '_' , fecha[n] , sep='')
resultados = read.csv(paste('datos_simulaciones/resultados', sim, '.csv', sep=''))
resultados$X = NULL
p2=resultados %>%
group_by(tiempo, estado) %>%
summarize(poblacion = sum(X0)) %>%
ggplot(aes(x=tiempo, y=poblacion, color=estado)) +
geom_line()
n=3
sim = paste('_' , alg[n] , '_frec=' , frec_test[n] , '_pob=' , pob[n] , '_cinic=', ctna_inic[n], '_r0=' , r0[n] , '_pi=', p_inic[n], '_iter=' , iteraciones[n], '_' , fecha[n] , sep='')
resultados = read.csv(paste('datos_simulaciones/resultados', sim, '.csv', sep=''))
resultados$X = NULL
p3=resultados %>%
group_by(tiempo, estado) %>%
summarize(poblacion = sum(X0)) %>%
ggplot(aes(x=tiempo, y=poblacion, color=estado)) +
geom_line()
}
p1
p2
p3
